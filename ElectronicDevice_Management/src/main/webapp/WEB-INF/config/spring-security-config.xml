<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
    xmlns="http://www.springframework.org/schema/security"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">
 
    <http auto-config="true">
        <csrf disabled="true" /> 
        <intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/user/**" access="hasRole('ROLE_ADMIN') or hasRole('ROLE_USER')" />
 
        <form-login login-page="/loginAdmin"
            login-processing-url="/j_spring_security_login"
            default-target-url="/admin" authentication-failure-url="/loginAdmin?error"
            username-parameter="username" password-parameter="password" />
 
        <logout logout-url="/j_spring_security_logout"
            logout-success-url="/logout" delete-cookies="JSESSIONID" />
    </http>
    
    <authentication-manager>
        <authentication-provider>
            <password-encoder ref="passwordEncoder" />
            <jdbc-user-service data-source-ref="dataSource"
                users-by-username-query="select username,password, enabled from accounts where username=?"
                authorities-by-username-query="select accounts.username, roles.name from accounts, roles, accounts_roles 
            where username =? and accounts.id = accounts_roles.userId and accounts_roles.roleId = roles.id " />
        </authentication-provider>
    </authentication-manager>
    
</beans:beans>
